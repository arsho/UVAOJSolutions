#include<cstdio>
#include<cstring>
#include<cassert>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<set>
#include<deque>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<fstream>
#include<typeinfo>
#include<locale>
#include<iterator>
#include<valarray>
#include<complex>
using namespace std;

int regpal(char s[])
{
        int a,b,i,j,k,l;
        l=strlen(s);
        b=0;
        for(i=0,j=l-1;i<l,j>=0;i++,j--)
        {
                if(s[i]==s[j])
                {
                        continue;
                }
                else
                {
                        b=1;
                        break;
                }
        }
        if(b==0)
        return 1;
        else
        return 0;
}
int mir(char s[])
{
        int a,b,c,i,j,k,l;
        l=strlen(s);
        for(i=0;i<l;i++)
        {
                if(s[i]=='E')
                s[i]='3';
                else if(s[i]=='J')
                s[i]='L';
                else if(s[i]=='O')
                s[i]='0';
                else if(s[i]=='S')
                s[i]='2';
                else if(s[i]=='Z')
                s[i]='5';
                else
                continue;
        }
        a=regpal(s);
        if(a==1)
        return 1;
        else
        return 0;
}
int mirpal(char s[])
{
        int i,j,a,b,c;
        b=strlen(s);
        c=0;
        for(i=0;i<b;i++)
        {
               if((s[i]=='A')||(s[i]=='M')||(s[i]=='H')||(s[i]=='I')||(s[i]=='O')||(s[i]=='T')||(s[i]=='U')||(s[i]=='V')||(s[i]=='W')||(s[i]=='X')||(s[i]=='Y')||(s[i]=='1')||(s[i]=='8')||(s[i]=='0'))
               c++;
        }
        if(c==b)
        return 1;
        else
        return 0;
}
int main()
{
        char line[1000];
        int i,j,a,v,c,b,pal,mirpl,str;
        while(scanf("%s",&line)==1)
        {
                printf("%s",line);
                pal=regpal(line);
                if(pal==1)
                {
                        mirpl=mirpal(line);
                        if(mirpl==1)
                        printf(" -- is a mirrored palindrome.\n\n");
                        else if(mirpl!=1)
                        printf(" -- is a regular palindrome.\n\n");

                }

                else
                {
                        str=mir(line);
                        if(str==1)
                        printf(" -- is a mirrored string.\n\n");
                        else
                        printf(" -- is not a palindrome.\n\n");
                }
        }
        return 0;
}
