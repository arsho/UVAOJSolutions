#include<cstdio>
#include<cstring>
#include<cassert>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<set>
#include<deque>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<fstream>
#include<typeinfo>
#include<locale>
#include<iterator>
#include<valarray>
#include<complex>
#include<climits>

using namespace std;
#define uld unsingned long long
#define ld long long
#define inf INT_MAX
#define pi 2*acos(0.0)
#define vi vector<int>
#define vl vector<long long>
#define pdd pair<int, int>
#define pll pair<long long, long long>
#define mp make_pair
#define mdd map<int, int>
#define mod 1000000000
#define pf first
#define ps second
#define vsort(v) sort(v.begin(), v.end())
#define cas(a) printf("Case %d:",a)
#define pb push_back
string ret(string as)
{
int len=as.length();
for(int i=0;i<len;i++)
{
if(as[i]>='A'&&as[i]<='Z')as[i]=as[i]-'A'+'a';
}
return as;
}
map<string,int>sho;
map<string,int>::iterator it;
int main()
{

string word,temp;
int count=0,a,v,c,d,e,f,g,h,i,j,len;
while(cin>>word)
{
word=ret(word);
len=word.length();
d=0;
for(i=0; i<len; i++)
{
if((word[i]>='A'&&word[i]<='Z')||(word[i]>='a'&&word[i]<='z'))
{
temp+=word[i];
}
else if(temp.length()!=0)
{
sho[ret(temp)]=1;
temp="";
}
}
if(temp.length()!=0)
{
sho[ret(temp)]=1;
temp="";
}
}
for(it=sho.begin();it!=sho.end();it++)
{
cout<<(*it).first<<endl;
}
return 0;
}