#include<cstdio>
#include<cstring>
#include<cassert>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<set>
#include<deque>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<fstream>
#include<typeinfo>
#include<locale>
#include<iterator>
#include<valarray>
#include<complex>
#include<climits>

using namespace std;
#define uld unsingned long long
#define ld long long
#define inf INT_MAX
#define pi 2*acos(0.0)
#define vi vector<int>
#define  vl vector<long long>
#define pdd pair<int, int>
#define pll pair<long long, long long>
#define mp make_pair
#define mdd map<int, int>
#define mod 1000000000
#define pf first
#define ps second
#define vsort(v) sort(v.begin(), v.end())
#define cas(a) printf("Case %d:",a)
#define pb push_back

int main()
{
    int cas,i,j,a,v,b,c,d,e,f,g,h,l;
    while(scanf("%d",&cas)==1)
    {
        if(cas==0)
            break;
        int stan=0,ol=0;
        int x[cas+1],y[cas+1];
        for(i=0; i<cas; i++)
        {
            scanf("%d%d",&x[i],&y[i]);
        }
        int cen=(cas/2)+1;
//        cout<<cen<<endl;
        int cenx=x[cen-1],ceny=y[cen-1];
    //    cout<<cenx<<endl<<ceny<<endl;
        for(i=0; i<cas; i++)
        {
            if(i==cen-1)
                continue;
            if(x[i]>cenx&&y[i]>ceny)
            {
                stan++;
                //cout<<x[i]<<" "<<y[i]<<" top r8 so stan"<<endl;
            }
            else if(x[i]>cenx&&y[i]<ceny)
            {
                ol++;
                //cout<<x[i]<<" "<<y[i]<<" bottom r8 so ol"<<endl;
            }

            else if(x[i]<cenx&&y[i]<ceny)
            {
                stan++;

                //cout<<x[i]<<" "<<y[i]<<" bottom left so stan"<<endl;
            }
            else if(x[i]<cenx&&y[i]>ceny)
            {
                ol++;

                //cout<<x[i]<<" "<<y[i]<<" top left so ol"<<endl;
            }

        }
        printf("%d %d\n",stan,ol);
    }
    return 0;
}
/*
11
3 2
3 3
3 4
3 6
2 -2
1 -3
0 0
-3 -3
-3 -2
-3 -4
3 -7

*/
