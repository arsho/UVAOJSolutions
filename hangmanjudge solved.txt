#include<cstdio>
#include<cstring>
#include<cassert>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<set>
#include<deque>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<fstream>
#include<typeinfo>
#include<locale>
#include<iterator>
#include<valarray>
#include<complex>
#include<climits>

using namespace std;
#define uld unsingned long long
#define ld long long
#define inf INT_MAX
#define pi 2*acos(0.0)
#define vi vector<int>
#define  vl vector<long long>
#define pdd pair<int, int>
#define pll pair<long long, long long>
#define mp make_pair
#define mdd map<int, int>
#define mod 1000000000
#define pf first
#define ps second
#define vsort(v) sort(v.begin(), v.end())
#define cas(a) printf("Case %d:",a)
#define pb push_back

int main()
{
    int x,cas,a,b,anslen,linelen,i,j,arr[27],stroke,los;
    char ans[5000], line[5000];
    while(scanf("%d",&cas)==1)
    {
        stroke=0;
        memset(arr, 0, sizeof arr);
        if(cas==-1)
            break;
        scanf("%s",&ans);
        scanf("%s",&line);
        anslen=strlen(ans);
        linelen=strlen(line);
        for(i=0; i<anslen; i++)
        {
            a=ans[i]-97;
            arr[a]++;
        }
        for(i=0; i<linelen; i++)
        {
                if(stroke>=7)continue;
                x=0;
            for(j=0; j<anslen; j++)
            {
                if(line[i]==ans[j])
                {
                        b=ans[j]-97;
                    arr[b]=0;
                    x=9;
                }
           }
           if(x==0)
           stroke++;
        }
        los=0;
        for(i=0; i<26; i++)
        {
            if(arr[i]!=0)
            {
                los=9;
                break;
            }
        }
        printf("Round %d\n",cas);
        if(stroke>=7&&los==9)
            printf("You lose.\n");
        else if(stroke<7&&los==9)
            printf("You chickened out.\n");
        else
            printf("You win.\n");
    }
    return 0;
}
