#include<cstdio>
#include<cstring>
#include<cassert>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<set>
#include<deque>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<fstream>
#include<typeinfo>
#include<locale>
#include<iterator>
#include<valarray>
#include<complex>
#include<climits>

using namespace std;
#define uld unsingned long long
#define ld long long
#define inf INT_MAX
#define pi 2*acos(0.0)
#define vi vector<int>
#define  vl vector<long long>
#define pdd pair<int, int>
#define pll pair<long long, long long>
#define mp make_pair
#define mdd map<int, int>
#define mod 1000000000
#define pf first
#define ps second
#define vsort(v) sort(v.begin(), v.end())
#define cas(a) printf("Case %d:",a)
#define pb push_back

int main()
{
      int t,cas,row,col,i,j,a,b,c,sho,n,m;
      scanf("%d",&cas);
      for(t=1;t<=cas;t++)
      {
              scanf("%d%d%d%d",&row,&col,&m,&n);
              int let[27]={0},maxi,tmp;
              char ch[800],ch1;
              for(i=0;i<row;i++)
              {
                              scanf("%s",&ch);
                              a=strlen(ch);
                              for(j=0;j<a;j++)
                              {
                                      ch1=ch[j];
                              tmp=ch1-65;
                              let[tmp]++;
                              }
              }
              maxi=-99;
              for(i=0;i<26;i++)
              {
                      if(let[i]>maxi)
                      maxi=let[i];
              }
              sho=0;
              for(i=0;i<26;i++)
              {
                      if(let[i]==maxi)
                      {
                              sho+=let[i]*m;
                      }
                      else sho+=let[i]*n;
              }
              printf("Case %d: %d\n",t,sho);
      }
      return 0;
}
