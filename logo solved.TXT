#include<cstdio>
#include<cstring>
#include<cassert>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<set>
#include<deque>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<fstream>
#include<typeinfo>
#include<locale>
#include<iterator>
#include<valarray>
#include<complex>
#include<climits>

using namespace std;
#define uld unsingned long long
#define ld long long
#define inf INT_MAX
#define pi 2*acos(0.0)
#define vi vector<int>
#define  vl vector<long long>
#define pdd pair<int, int>
#define pll pair<long long, long long>
#define mp make_pair
#define mdd map<int, int>
#define mod 1000000000
#define pf first
#define ps second
#define vsort(v) sort(v.begin(), v.end())
#define cas(a) printf("Case %d:",a)
#define pb push_back

int main()
{
    int cas, a,b,c,d,e,f,i,j;
    double p=acos(-1.0);
    scanf("%d",&cas);

    for(i=0; i<cas; i++)
    {
        double x=0,y=0,angle=0,val,ans;
        char dir[5];
        scanf("%d",&b);
        for(j=0; j<b; j++)
        {
            scanf("%s",&dir);
            scanf("%lf",&val);
            if(strcmp(dir,"fd")==0)
            {
     
                x+=val*cos((angle*p)/180.0);
                y+=val*sin((angle*p)/180.0);

            }
            else if(strcmp(dir,"bk")==0)
            {
                x-=val*cos((angle*p)/180.0);
                y-=val*sin((angle*p)/180.0);
            }
            else if(strcmp(dir,"lt")==0)
            {
                angle-=val;
                angle=fmod(angle,360);
            }
            else if(strcmp(dir,"rt")==0)
            {
                angle+=val;
                angle=fmod(angle,360);
            }
        }
        ans=sqrt(x*x+y*y);
        printf("%.0lf\n",ans);
    }
    return 0;
}
